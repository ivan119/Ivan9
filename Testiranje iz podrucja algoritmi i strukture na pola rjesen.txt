
#include "pch.h"
#include <iostream>
#include <string>
#include <vector>
#include <stdlib.h>
#include <time.h>
#include <fstream>
#include <queue>


using namespace std;



struct  pacijent
{
	int mbo;
	string ime;
	string prezime;
	vector<string>lijekovi;
};


queue <string>red;

//#Declarations_of_functions
pacijent unos_pacijenata(vector<pacijent> baza);
void ispis_pacijenata(vector<pacijent>ljudi);
void prijava();
void odjava();
void sustav();


//#Functions
void prijava() {

	system("cls");

	cout << "Koliko pacijenata zelite prijaviti?: " << endl;
	int kolicina;
	cin >> kolicina;
	if (kolicina == 0) {
		sustav();
	}

	for (int i = 0; i < kolicina; i++) {
		string ime;
		cout << "Unesite ime: ";
		cin >> ime;
		red.push(ime);
		
	} 
}
void odjava() {

	system("cls");
	

	if (red.size() < 1) {
		for (int i = 0; i < 1; i++, red.pop())
		{
			cout << red.front() << " " << "je trenutno kod doktora " << endl;
		}
		cout << red.front() << " " << "je sljedeci na redu " << endl;
		cout << red.size() << " " << "Ceka u cekaonici " << endl;
	}
	else if (red.size() == 1)
	{
		for (int i = 0; i < 1; i++, red.pop())
		{
			if (i == 0) {
				cout << red.front() << " " << "je trenutno kod doktora" << endl;
			}
			cout << "Nema nikog u cekaonici" << endl;
		}

	}
	else {
		cout << "Cekaonica je prazna " << endl;
	}


}

void sustav() {


	system("cls");
	
	int izbor;


	cout << "1 Prijava" << endl << "2 Odjava" << endl << "3.Izlaz(0) " << endl;

	cin >> izbor;
	
	do {
		switch (izbor) {
		case 1:prijava();
		
	 

		case 2:odjava();
			 

		case 0:
			break;

			 


		}

	} while (izbor != 0);


}

pacijent unos_pacijenata(vector<pacijent> baza) {
	int a;
	pacijent novi;
	bool isti = false;
	do {
		cout << "Unesite MBO: ";
		cin >> a;
		for (int i = 0; i < baza.size(); i++) {
			if (a == baza[i].mbo) {
				cout << "Uneseni MBO vec postoji!\n";
				isti = true;
				break;
			}
			else {
				isti = false;
				break;
			}
		}

	} while (isti == true);
	novi.mbo = a;

	cout << "\nUnesite ime: ";
	cin >> novi.ime;

	cout << "\nUnesite Prezime: ";
	cin >> novi.prezime;
	string lijek;
	do {
		cout << "\nUnesite Lijekove ili 0 za izlaz: ";
		cin >> lijek;
		if (lijek == "0") {
			break;
		}
		novi.lijekovi.push_back(lijek);
		
	} while (lijek != "0");

	
	ofstream output;
	output.open("bazaa.txt", ios::out | ios::app);
	
	output << novi.mbo << " " << novi.ime << " " << novi.prezime << " ";
	for (int i = 0; i < novi.lijekovi.size(); i++) {
		output << novi.lijekovi[i] << " ";
	}
	output << endl;

	output.close();
	return novi;
}

void ispis_pacijenata(vector<pacijent>ljudi) {

	pacijent x;

	for (int i = 0; i < ljudi.size(); i++) {

		pacijent x = ljudi[i];
		cout << "MBO: " << x.mbo << "\t" << "Ime: " << x.ime << "\t" << "Prezime: " << x.prezime << endl << endl;
	}
	system("Pause");
}

//
//void recusive_binary_search(vector<pacijent>popis,int start,int end,int trazeni_broj) {
//
//	pacijent novi;
//	int start = 0;
//	int end = novi.mbo;
//	int mid = (start + end) / 2;
//
//
//}






int main()
{
	int izbor;
	vector<pacijent> pacijenti;

	ifstream input;
	input.open("bazaa.txt", ios::out | ios::app);

	input.close();
	system("pause");

	do {
		system("cls");
		cout << "\t\t    Ordinacija  \n\n1. Unos novih pacijenata\n2. Ispis svih pacijenata\n3. Pretraga pacijenta po MBO\n4. Sustav cekaonice\n5. Dodavanje recepata " << endl;
		cin >> izbor;
		switch (izbor) {
		case 1:
			pacijenti.push_back(unos_pacijenata(pacijenti));
			break;
		case 2:
			ispis_pacijenata(pacijenti);
			break;
		case 3:

			break;
		case 4:
			sustav();
			break;
		case 5:

			break;
		}
	} while (izbor != 0);

}

